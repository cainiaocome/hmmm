** ufw 0.0.1 (Unlimited Falun Works)


1. 原理
-------------
常见的 NIPS 进行 TCP 流检测的方式是只根据单向通信来重建会话，而不真正验证三次握手。这就为拒绝服务攻击提供了漏洞。

比如，在确定目标不会响应之后，向目标地址发出 SYN、ACK 和含有攻击性数据荷载的 PSH/ACK 便会触发 NIPS 的主动防御。通过这种原理，可以对 NIPS 的特性进行扫描监听，或者伪造源地址对 NIPS 进行拒绝服务攻击，或者让 NIPS 对无辜的第三方进行“主动防御”。

2. 实现
-------------
使用 read 一个 raw socket 来听包，听到 NIPS 主动防御包之后显示出来。

定时，在整秒和整秒 +500ms 处发送一次攻击性伪造会话，触发主动防御。使用高精度定时的动机是便于多点联合测量。最后可利用比如 gnuplot 绘出图形。

3. 编译和运行
-------------
ufw 目前只在 Debian GNU/Linux 5.0.2 上进行了编译和测试，其他 Linux 发行版可自行调整设置，其他操作系统可自行移植。当然，这是 demo，其意义在于用户根据自己需要移植相关代码或者利用其原理进行更好的实现。ufw 依赖 libnet 和 glib。具体选项可自行修改 Makefile。

ufw 目前含有一个程序 scan。其中注意 scan.c 有一个 CHINANET 宏，开启之后会对之前总结的 ChinaNet 网络中 NIPS 的某些报文特征进行验证。

scan 听包写包都需要特权。scan 会在目标网络中随机选取地址，因此要尽量确保目标网络不会有活动的主机进行响应。设置本地 IP 地址是为了处理多网卡多 IP 的情况。而 -t 选项必须设置以确保数据最终不会到达目标。ttl 选取的办法如下：

使用 traceroute -nA 3.0.0.0 得到：
...
 8  202.97.35.158 [AS4134]  60.878 ms
 9  202.97.35.22 [AS4134]  64.362 ms
10  202.97.5.66 [AS4134]  296.378 ms
11  61.213.162.169 [AS2914]  298.219 ms
12  129.250.6.18 [AS2914]  369.192 ms
...
说明在 11 跳处越过了 NIPS，考虑到动态路由造成路径长度的变化，可以将 ttl 设置得稍微大一点，比如 14。

stdout 的格式（不严格）：
printf("[%ld.%06ld] +%ld.%06ld %s %hu>%hu ttl:%hhu id:%04x w:%04x td:%d",
sent.sec, sent.usec, elapsed.sec, elapsed.usec, flags, sport, dport,
ip_ttl, ip_id, th_win, ip_ttl-th_win%64)
其中 td 只在开启 CHINANET 宏的时候显示。

4. TODO
-------------
 
5. 关于
-------------
BSD 许可证。详见 COPYING。

作者 KLZ毕业 <klzgrad@gmail.com>。

项目在 http://code.google.com/p/hmmm。
